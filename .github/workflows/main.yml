# This is a basic workflow to help you get started with Actions

name: build

# Controls when the action will run. 
on:
  workflow_dispatch:
    inputs:
      version:
        required: true

jobs:

  build-frontend:

    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-


      - name: Download dependencies
        run: npm i --prefix remote-frontend/

      - name: build
        run: npm run build --prefix remote-frontend/

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: |
            ./remote-frontend/build


  build-backend:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download deps
        run: go get
      
      # Runs a set of commands using the runners shell
      - name: Build executable
        run: go build

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: backend-executable
          path: |
            ./remote.exe


  build-distributable:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: backend-executable

      - uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: ./assets

      - uses: thedoctor0/zip-release@master
        with:
          filename: "remote-${{ github.event.inputs.version }}.zip"

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "remote-${{ github.event.inputs.version }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version }}
